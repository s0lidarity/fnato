// PROJECT RULES - SIMPLIFIED FORMAT
// Last updated: [current date]

// TECH STACK - CRITICAL
// USE PREACT NOT REACT - import from preact/hooks
// TypeScript, styled-components, react95, @lingui/react/macro, @lingui/core, vite

// PREACT IMPORTS - ALWAYS USE THESE
import { h } from 'preact';
import { useState, useEffect, useCallback, useMemo } from 'preact/hooks';

// STYLED COMPONENTS - REQUIRED FORMAT
const StyledComponent = styled.element.attrs<any>({
  'data-testid': 'component-name',
  'data-component': 'ParentComponent/ComponentName'
})`
  // styles
`;

// COMPONENT STRUCTURE 
// - Use functional components with hooks
// - Export as default
// - Props interfaces should be named [Component]Props
// - Always add data-testid and data-component to styled components

// CONTEXT USAGE - REQUIRED FORMAT
// When consuming context:
function Component() {
  const {
    // State values (alphabetically ordered)
    valueA,
    valueB,
    
    // Functions (alphabetically ordered)
    functionA,
    functionB,
  } = useContext();
}

// NAMING CONVENTIONS
// Components: PascalCase
// Files: PascalCase for components, camelCase for utilities
// Styled Components: Prefix with 'Styled' or descriptive name
// Props Interfaces: Suffix with 'Props'
// Context: Suffix with 'Context'

// PREACT EVENTS - IMPORTANT DIFFERENCE
// Use: (value) => handleChange(value) 
// NOT: (event.target.value) => handleChange(event.target.value)

// LOCALIZATION
// Always use @lingui/react/macro for user-facing text
import { Trans } from '@lingui/react/macro';
